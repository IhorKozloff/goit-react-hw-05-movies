{"version":3,"file":"static/js/387.901f9418.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBF,IAAAA,IAAA,sCAAyCC,EAAzC,YAFxB,cAEOE,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEwBR,IAAAA,IAAA,8BAAiCQ,EAAjC,oBAAkDP,EAAlD,YAFxB,cAEOE,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAEwBV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAkCT,EAAlC,oBAFxB,cAEOE,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEwBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CT,EAA1C,oBAFxB,cAEOE,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEwBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CT,EAA1C,oBAFxB,cAEOE,EAFP,yBAIQA,EAASC,MAJjB,gCAMCC,QAAQC,MAAM,uGANf,0F,8GC5CMO,E,QAAiBC,EAAAA,IAAH,0B,mBCGZ,SAASC,IAEtB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYN,OAVFE,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAiBO,GAASG,MAAK,SAAAlB,GAI3Bc,EAAed,EAAKmB,cAExB,CAACJ,KAIG,gCACKF,IAAe,SAACJ,EAAD,WACZ,wBACKI,EAAYO,KAAI,SAAAC,GACb,OACI,2BACI,oCAAYA,EAAKC,WACjB,uBAAID,EAAKE,YAFJF,EAAKf,WAS1BO,GAAsC,IAAvBA,EAAYW,SAE3B,SAACf,EAAD,WACI","sources":["components/API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\nconst API_KEY = \"8b9c2b35d1bc0d9e8879c4faa9dd8b75\";\n\n\n\n    \n\nexport async function searchAPITop () {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIByName(title) {\n    try {\n        const response = await axios.get(`/search/movie?query=${title}&api_key=${API_KEY}&page=1`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIById(id) {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIActors(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\nexport async function searchAPIReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n      \n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\n","import styled from '@emotion/styled';\n\nexport const ReviewsWrapper = styled.div`\n\n`;","import { useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ReviewsWrapper } from 'components/Reviews/Reviews.styled';\nimport { searchAPIReviews } from 'components/API';\n\nexport default function Reviews () {\n    \n  const [reviewsData, setReviewsData] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    searchAPIReviews(movieId).then(data => {\n        // if (data.results.lenth === 0) {\n        //     setReviewsData([{id:'none', author:'', content:''}]);\n        // }\n        setReviewsData(data.results);\n    });\n  },[movieId]);\n    \n\n    return (\n        <>\n            {reviewsData && <ReviewsWrapper>\n                <ul>\n                    {reviewsData.map(item => {\n                        return (\n                            <li key={item.id}>\n                                <h4>Author:{item.author}</h4>\n                                <p>{item.content}</p>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </ReviewsWrapper>}\n            {\n                reviewsData && reviewsData.length === 0 &&\n\n                <ReviewsWrapper>\n                    <p>We don't have any reviews for this movie.</p>\n                </ReviewsWrapper>\n            }\n        </>\n    )\n}"],"names":["axios","API_KEY","searchAPITop","response","data","console","error","searchAPIByName","title","searchAPIById","id","searchAPIActors","searchAPIReviews","ReviewsWrapper","styled","Reviews","useState","reviewsData","setReviewsData","movieId","useParams","useEffect","then","results","map","item","author","content","length"],"sourceRoot":""}