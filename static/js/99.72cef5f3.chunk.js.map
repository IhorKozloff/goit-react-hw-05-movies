{"version":3,"file":"static/js/99.72cef5f3.chunk.js","mappings":"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","sources":["components/SearchingBar/SearchBar.styled.jsx","components/SearchingBar/SearchBar.jsx","Pages/MoviesPage.jsx","components/API.js","components/ItemMovieLink/ItemMovieLink.styled.jsx","components/ItemMovieLink/ItemMovieLink.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { Form, Field, } from 'formik';\n\n\n\nexport const FormStyled = styled(Form)`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\nexport const FieldStyled = styled(Field)`\n    border: 1px solid black;\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    // border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`;\nexport const SearchBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://w7.pngwing.com/pngs/242/301/png-transparent-black-and-blue-q-logo-illustration-computer-icons-apple-icon-format-search-icon-svg-desktop-wallpaper-web-search-engine-toolbar.png');\n    background-size: 150%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    :hover {\n        opacity: 1;\n    }\n    &:active {\n        transform: scale(0.9)\n    }\n`;\nexport const SearchBtnLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;","import { Formik } from \"formik\";\nimport {FormStyled, FieldStyled, SearchBtn, SearchBtnLabel} from 'components/SearchingBar/SearchBar.styled'\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({setSearchParams, setmovieList }) => {\n\n\n\n    \n    return (\n        <Formik \n            initialValues={{movieName:''}} \n            onSubmit={({movieName}, actions) => {\n\n                                                    if (movieName.trim() === '') {\n                                                        return;\n                                                    };\n                                                    setSearchParams({query: movieName})\n                                                    setmovieList([]);\n\n                                                    actions.resetForm();\n                                                }}>\n\n                <FormStyled className=\"form\">\n                    <SearchBtn type=\"submit\" className=\"button\">\n                        <SearchBtnLabel className=\"button-label\">Search</SearchBtnLabel>\n                    </SearchBtn>\n\n                    <FieldStyled\n                        name=\"movieName\"\n                        className=\"input\"\n                        type=\"text\"\n                        autoComplete=\"on\"\n                        autoFocus\n                        placeholder=\"Search movie\"\n                    />\n                </FormStyled>\n        </Formik>\n    \n);\n\n};\n\nSearchBar.propTypes = {\n    setmovieList: PropTypes.func.isRequired,\n    setSearchParams: PropTypes.func.isRequired, \n}\n","import React, {useState, useEffect} from \"react\"\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { SearchBar } from 'components/SearchingBar/SearchBar';\nimport { searchAPIByName } from 'components/API';\nimport { ItemMovieLink } from 'components/ItemMovieLink/ItemMovieLink';\n\nexport default function MoviesPage () {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movieList, setmovieList] = useState(null);\n    const movieTitle = searchParams.get('query') ?? '';\n    const location = useLocation();\n\n\n \n    useEffect(() => {\n\n        if(movieTitle !== ''){\n            \n            searchAPIByName(movieTitle).then(data => {\n                setmovieList(data.results)\n            });  \n        }\n        \n     \n    },[movieTitle])\n\nreturn (\n    <>\n        <SearchBar setSearchParams={setSearchParams} setmovieList={setmovieList}/>\n        {movieList && \n            <ul className='search-movie-list'>\n                {movieList.map(({id, original_title}) => <ItemMovieLink key={id} id={id} state={{from: location}}>{original_title}</ItemMovieLink>)}\n            </ul>\n        }\n    </>\n)\n\n};\n\n\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\nconst API_KEY = \"8b9c2b35d1bc0d9e8879c4faa9dd8b75\";\n\n\n\n    \n\nexport async function searchAPITop () {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIByName(title) {\n    try {\n        const response = await axios.get(`/search/movie?query=${title}&api_key=${API_KEY}&page=1`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIById(id) {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIActors(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\nexport async function searchAPIReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n      \n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const MovieLink = styled(NavLink)`\n    text-decoration: none;\n`;\n\nexport const MovieLinkWrapper = styled.li`\n    margin-top: 10px;\n`;","import React from \"react\";\nimport { MovieLink, MovieLinkWrapper } from 'components/ItemMovieLink/ItemMovieLink.styled';\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const ItemMovieLink = ({id, state, children}) => {\n    return (\n        <MovieLinkWrapper> \n            <MovieLink to={`/movies/${id}`} state={state} className=\"movie-item-link\">{children}</MovieLink>;\n        </MovieLinkWrapper>\n    )\n};\n\nItemMovieLink.propTypes = {\n    id: PropTypes.number.isRequired,\n    state: PropTypes.object.isRequired,\n    children: PropTypes.string.isRequired,\n};"],"names":["FormStyled","styled","Form","FieldStyled","Field","SearchBtn","SearchBtnLabel","SearchBar","setSearchParams","setmovieList","initialValues","movieName","onSubmit","actions","trim","query","resetForm","className","type","name","autoComplete","autoFocus","placeholder","MoviesPage","useSearchParams","searchParams","useState","movieList","movieTitle","get","location","useLocation","useEffect","searchAPIByName","then","data","results","map","id","original_title","ItemMovieLink","state","from","axios","API_KEY","searchAPITop","response","console","error","title","searchAPIById","searchAPIActors","searchAPIReviews","MovieLink","NavLink","MovieLinkWrapper","children","to"],"sourceRoot":""}