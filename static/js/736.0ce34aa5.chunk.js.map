{"version":3,"file":"static/js/736.0ce34aa5.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAMT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAEwBH,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAyDE,IAFjF,cAEOC,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAON,GAAtC,gGAEwBH,IAAAA,IAAA,8BAAiCS,EAAjC,oBAAkDR,EAAlD,iBAAkEE,IAF1F,cAEOC,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAEwBX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCV,EAAlC,oBAFxB,cAEOG,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEwBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,EAA1C,oBAFxB,cAEOG,EAFP,yBAGQA,EAASC,MAHjB,gCAKCC,QAAQC,MAAM,uGALf,wFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEwBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CV,EAA1C,oBAFxB,cAEOG,EAFP,yBAIQA,EAASC,MAJjB,gCAMCC,QAAQC,MAAM,uGANf,0F,8GC5CMO,E,QAAcC,EAAAA,IAAH,0B,mBCIT,SAASC,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQN,OANAE,EAAAA,EAAAA,YAAU,YACNV,EAAAA,EAAAA,IAAgBQ,GAASG,MAAK,SAAAlB,GAC1Bc,EAAkBd,EAAKmB,WAE7B,CAACJ,KAIC,8BACKF,IAAkB,UAACJ,EAAD,YACf,iCAASM,MACT,wBAEIF,EAAeO,KAAK,SAAAC,GAChB,OACI,2BAEI,gBACIC,IAAG,6CAAwCD,EAAKE,cAChDC,MAAM,KACNC,OAAO,KACPC,IAAI,MAGR,uBAAIL,EAAKM,QACT,uCAAeN,EAAKO,eAVfP,EAAKf","sources":["components/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\nconst API_KEY = \"8b9c2b35d1bc0d9e8879c4faa9dd8b75\";\n\n\n\n    \n\nexport async function searchAPITop (page) {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIByName(title, page) {\n    try {\n        const response = await axios.get(`/search/movie?query=${title}&api_key=${API_KEY}&page=${page}`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIById(id) {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIActors(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\nexport async function searchAPIReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n      \n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\n","import styled from '@emotion/styled';\n\nexport const CastWrapper = styled.div`\n\n`;","import { useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CastWrapper } from 'components/Cast/Cast.styled';\nimport { searchAPIActors } from 'components/API';\n\n\nexport default function Cast () {\n  const [actorsListData, setActorsListData] = useState(null);\n  const { movieId } = useParams();\n    \n    useEffect(() => {\n        searchAPIActors(movieId).then(data => {\n            setActorsListData(data.cast);\n        })\n    },[movieId])\n\n    return (\n        \n        <>\n            {actorsListData && <CastWrapper>\n                <p>Cast {movieId}</p>\n                <ul>\n                 {\n                    actorsListData.map( item => {\n                        return (\n                            <li key={item.id}>\n\n                                <img \n                                    src={`https://image.tmdb.org/t/p/original${item.profile_path}`}\n                                    width=\"60\"\n                                    height=\"80\"\n                                    alt=\"\"\n                                /> \n                                \n                                <p>{item.name}</p>\n                                <p>Character: {item.character}</p>\n                            </li>\n                        )\n                    })\n                 }\n                </ul>\n            </CastWrapper>}\n        </>\n    )\n}\n//original_name profile_path character"],"names":["axios","API_KEY","searchAPITop","page","response","data","console","error","searchAPIByName","title","searchAPIById","id","searchAPIActors","searchAPIReviews","CastWrapper","styled","Cast","useState","actorsListData","setActorsListData","movieId","useParams","useEffect","then","cast","map","item","src","profile_path","width","height","alt","name","character"],"sourceRoot":""}