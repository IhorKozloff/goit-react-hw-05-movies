{"version":3,"file":"static/js/97.7544ab0e.chunk.js","mappings":"yPAEaA,EAAsBC,EAAAA,EAAAA,IAAH,4CAInBC,EAAqBD,EAAAA,EAAAA,IAAH,+C,SCAlBE,EAAe,WACxB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,MAIAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcN,GAASO,MAAK,SAAAC,GACpBJ,EAAQI,QAElB,CAACR,IAGH,IAAuBS,EAIvB,OAGI,8BAEKN,IACG,UAACP,EAAD,CAAqBc,UAAU,wBAA/B,WAEI,gBACIC,IAAG,yCAAoCR,EAAKS,aAC5CC,IAAI,SACJC,MAAM,MACNC,OAAO,SAGX,UAACjB,EAAD,CAAoBY,UAAU,uBAA9B,WACI,yBACKP,EAAKa,gBACN,gCACMb,EAAKc,aAAaC,MAAM,EAAG,GADjC,WAIJ,uCAAmC,GAApBf,EAAKgB,aAApB,QAEA,sCACA,uBAAIhB,EAAKiB,YAET,oCACA,2BAhCGX,EAiCgBN,EAAKM,OAhCjCA,EAAOY,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAMC,KAAK,iB,SCjBrCC,GAAa5B,EAAAA,EAAAA,GAAO6B,EAAAA,GAAP7B,CAAH,oDAGV8B,EAAgB9B,EAAAA,EAAAA,IAAH,mHCHb+B,EAAY,WACrB,OACI,+BACI,UAACD,EAAD,YACI,mDACA,2BACI,yBAAI,SAACF,EAAD,CAAYI,GAAG,OAAf,qBACJ,yBAAI,SAACJ,EAAD,CAAYI,GAAG,UAAf,gCCTXC,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACvB,OAAO,mBAAQC,KAAK,SAAStB,UAAU,cAAcuB,QAASF,EAAvD,sBCKI,SAASG,IAAqB,IAAD,IAElCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCpC,EAAAA,EAAAA,UAAQ,iBAACiC,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAAlE,eAAOC,EAAP,UAYA,OACI,iCACI,SAACX,EAAD,CAAWC,YAXC,WAIhBM,EAASI,OAQL,SAAC1C,EAAD,KACA,SAAC6B,EAAD,KACA,SAAC,KAAD,S,0MC3BZc,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAMT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gGAEwBH,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAyDE,IAFjF,cAEOC,EAFP,yBAGQA,EAAS3C,MAHjB,gCAKC4C,QAAQC,MAAM,uGALf,wFASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAOL,GAAtC,gGAEwBH,IAAAA,IAAA,8BAAiCQ,EAAjC,oBAAkDP,EAAlD,iBAAkEE,IAF1F,cAEOC,EAFP,yBAGQA,EAAS3C,MAHjB,gCAKC4C,QAAQC,MAAM,uGALf,wFASA,SAAe1C,EAAtB,+CAAO,OAAP,oBAAO,WAA6B6C,GAA7B,gGAEwBT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,EAAlC,oBAFxB,cAEOG,EAFP,yBAGQA,EAAS3C,MAHjB,gCAKC4C,QAAQC,MAAM,uGALf,wFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEwBT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,oBAFxB,cAEOG,EAFP,yBAGQA,EAAS3C,MAHjB,gCAKC4C,QAAQC,MAAM,uGALf,wFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEwBT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,oBAFxB,cAEOG,EAFP,yBAIQA,EAAS3C,MAJjB,gCAMC4C,QAAQC,MAAM,uGANf","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/AddInform/AddInform.styled.jsx","components/AddInform/AddInform.jsx","components/GoBackBtn.jsx","Pages/MovieDetailsPage.jsx","components/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieDetalesWrapper = styled.div`\n    display: flex;\n`;\n\nexport const MovieDetalesInform = styled.div`\n    margin-left: 20px\n`;","import { useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchAPIById } from 'components/API';\n\nimport { MovieDetalesWrapper, MovieDetalesInform } from 'components/MovieDetails/MovieDetails.styled'\n\nexport const MovieDetails = () => {\n    const { movieId } = useParams();\n    const [data, setData] = useState(null)\n    \n\n\n    useEffect(() => {\n        searchAPIById(movieId).then(responseData => {\n                setData(responseData)\n            })\n    },[movieId]) \n\n\n    const genresCreator = (genres) => {\n        return genres.map(item => item.name).join(\" \");\n    };\n\n    return (\n        \n\n        <>\n\n            {data && \n                <MovieDetalesWrapper className=\"movie-detales-wrapper\">\n\n                    <img \n                        src={`https://image.tmdb.org/t/p/w300${data.poster_path}`} \n                        alt=\"poster\" \n                        width=\"280\" \n                        height=\"398\"\n                    />\n                    \n                    <MovieDetalesInform className=\"movie-detales-inform\">\n                        <p>\n                            {data.original_title}\n                            <span>\n                                ({data.release_date.slice(0, 4)})\n                            </span>\n                        </p>\n                        <p>User Score:{data.vote_average * 10}%</p>\n\n                        <h3>Overview</h3>\n                        <p>{data.overview}</p>\n\n                        <h4>Genres</h4>\n                        <span>\n                            {genresCreator(data.genres)}\n                        </span>\n                    </MovieDetalesInform>\n                </MovieDetalesWrapper>\n            }\n        </>\n    )\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const InformLink = styled(NavLink)`\n    text-decoration: none;\n`;\nexport const InformWrapper = styled.div`\n    margin-top: 10px\n    border-top: 1px solid green;\n    border-bottom: 1px solid red;\n`;","import React from \"react\";\nimport { InformLink, InformWrapper } from \"components/AddInform/AddInform.styled\";\n\nexport const AddInform = () => {\n    return (\n        <>\n            <InformWrapper>\n                <p>Additional information</p>\n                <ul>\n                    <li><InformLink to=\"cast\" >Cast</InformLink></li>\n                    <li><InformLink to=\"reviews\" >Reviews</InformLink></li>\n                </ul>\n            </InformWrapper>\n        </>\n\n    );\n};","\nexport const GoBackBtn = ({onBackClick}) => {\n    return <button type=\"button\" className=\"go-back-btn\" onClick={onBackClick}>Go Back</button>\n};","import { useState } from 'react';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { AddInform } from 'components/AddInform/AddInform';\nimport { GoBackBtn } from 'components/GoBackBtn';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\n\nexport default function MovieDetailsPage () {\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [backLink, setBackLink] = useState(location?.state?.from ?? '/');\n    \n    \n    const onBackClick = () => {\n        if( 5 > 10) {\n            setBackLink('Это что б линтер не ругался на неиспользуемый setBackLink')\n        }\n        navigate(backLink)\n    }\n\n\n\n    return (\n        <>\n            <GoBackBtn onBackClick={onBackClick}/>\n            <MovieDetails/>\n            <AddInform/>\n            <Outlet/>\n        </>\n    );\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\nconst API_KEY = \"8b9c2b35d1bc0d9e8879c4faa9dd8b75\";\n\n\n\n    \n\nexport async function searchAPITop (page) {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIByName(title, page) {\n    try {\n        const response = await axios.get(`/search/movie?query=${title}&api_key=${API_KEY}&page=${page}`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIById(id) {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\nexport async function searchAPIActors(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\nexport async function searchAPIReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n      \n        return response.data;\n    } catch (error) {\n        console.error('Упс, ошибочка вышла');\n    };\n}\n\n\n"],"names":["MovieDetalesWrapper","styled","MovieDetalesInform","MovieDetails","movieId","useParams","useState","data","setData","useEffect","searchAPIById","then","responseData","genres","className","src","poster_path","alt","width","height","original_title","release_date","slice","vote_average","overview","map","item","name","join","InformLink","NavLink","InformWrapper","AddInform","to","GoBackBtn","onBackClick","type","onClick","MovieDetailsPage","location","useLocation","navigate","useNavigate","state","from","backLink","axios","API_KEY","searchAPITop","page","response","console","error","searchAPIByName","title","id","searchAPIActors","searchAPIReviews"],"sourceRoot":""}